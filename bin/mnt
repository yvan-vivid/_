#!/usr/bin/env bash
################################################################################
# Yvan Vivid -- Mounting utility
################################################################################

declare -A uuids
uuids["oak"]="f185035f-a3b7-42f1-b738-9fec78729748"
uuids["finger"]="ed8988f8-f396-49e7-a6bb-5f6a058e5901"

declare -r \
  sky="sky" \
  sky_point="/mnt/sky"

get_path() {
  declare -r drive="$1"
  declare -r uuid="${uuids["$drive"]}"

  if [[ -z "$uuid" ]]; then
    echo "drive [$drive] is not defined." >&2
    exit 1
  fi

  declare -r path="/dev/disk/by-uuid/$uuid"
  if [[ ! -e "$path" ]]; then
    echo "drive [$drive] is not available." >&2
    return 1
  fi

  echo "$path"
}

get_device() { echo "/dev/$(lsblk -no pkname "$1")"; }

mount_usb() {
  declare -r drive="$1"
  declare path
  path="$(get_path "$drive")" || return

  if findmnt "$path"; then
    echo "drive [$drive] already mounted."
    return
  fi

  echo "mounting drive [$drive]."
  mount "$path"
  echo "mounted"
}

unmount_usb() {
  declare -r drive="$1"
  declare path
  path="$(get_path "$drive")" || return

  if ! findmnt "$path"; then
    echo "drive [$drive] is not mounted."
    return
  fi

  echo "unmounting drive [$drive]."
  umount "$path"
  echo "unmounted"
}

mount_rclone() {
  rclone mount "${sky}:" "$sky_point" --daemon --vfs-cache-mode full
}

unmount_rclone() {
  fusermount -u "$sky_point" 
}


declare -r com="$1" device="$2"

if [[ -z "$com" ]]; then
  echo "Command must be provided: {'mount', 'unmount', 'unpower', 'eject'}"
  exit 1
fi

if [[ -z "$device" ]]; then
  echo "Must provide a device"
  exit 1
fi

if [[ "$device" != "all" ]]; then
  declare -r device_path="${!device}"
  if [[ -z "$device_path" ]]; then
    echo "Device undefined: $device"
    exit 1
  fi

  if ! test -e "$device_path"; then
    echo "$device is unavailable"
    exit 0
  fi
fi

case "$com" in
  mount)
    echo "Mounting $device"
    udisksctl mount --block-device "$device_path" 
    ;;
  
  unmount)
    echo "Unmounting $device"
    udisksctl unmount --block-device "$device_path" 
    ;;
  
  unpower)
    echo "Powering off $device"
    udisksctl power-off --block-device "$device_path" 
    ;;
  
  eject)
    echo "Ejecting $device (unmount + power-off)"
    udisksctl unmount --block-device "$device_path"
    sleep 3
    udisksctl power-off --block-device "$device_path" 
    echo "Powered off $device"
    ;;

  remotes)
    echo "Mounting remotes."
    mount_rclone
    echo "Sky mounted at $sky_point"
    ;;

  unremotes)
    echo "Unmounting remotes."
    unmount_rclone
    ;;
esac
